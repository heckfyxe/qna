.question
h1= question.title
p#question-rating= "Rating: #{question.rating}"
- if current_user && !current_user.author?(question)
  = question_vote_link('Vote up', true, question, question.user_vote(current_user) < 1)
  =< question_vote_link('Vote down', false, question, question.user_vote(current_user) > -1)
p= question.body

- if question.files.attached?
  - question.files.each do |file|
    p id="file-#{file.id}"
      = link_to file.filename.to_s, url_for(file)
      - if current_user&.author?(file.record)
        =< link_to 'Delete', file_path(file.id), method: :delete, remote: true

- if question.links.present?
  .links
    p Links:
    ul
      = render question.links

- if question.badge
  p Badge for the best answer:
  = render question.badge

br

h2 Answers
.answers
  = render @answers

.answer-errors
  = render 'shared/errors', resource: @answer

= form_with model: [question, @answer], class: 'new-answer', data: { type: :json } do |f|
  = render 'answers/answer_fields', f: f

  p = f.submit 'To answer'